# se presentan las funciones de anualidades vencidas
#autor: Dana Yuval Reyes González
#v1.0: 20 octubre de 2024

ValorFuturo= function(A, r, n) {
   VF= A*(((1+r)^n -1)/r)
  return(VF)
}


A = function(ValorFuturo, r, n) {
  a = (ValorFuturo * r) / ((1 + r)^n - 1)
  return(a)
}



n = function(ValorFuturo, A, r) {
  numb = log((ValorFuturo * r) / A + 1) / log(1 + r)
  return(numb)
}



tasa= function(ValorFuturo, A, n) {
  func = function(r) {
    ValorFuturo - A * (((1 + r)^n - 1) / r)
  }
  
  lower = 0.0001  
  upper = 1
  f.lower = func(lower)
  f.upper = func(upper)
  
  if (is.na(f.lower) || is.na(f.upper)) {
    stop("No se puede calcular en el intervalo dado.")
  }
  
  if (f.lower * f.upper > 0) {
    stop("La función no cambia de signo en el intervalo dado.")
  }
  
  r = uniroot(func, c(lower, upper))$root
  return(r)
}



VA = function(A, r, n) {
  ValorAct = A * ((1 - (1 + r)^(-n)) / r)
  return(ValorAct)
}



anualidad = function(VA, r, n) {
  A_va = (VA * r) / (1 - (1 + r)^(-n))
  return(A_va)
}



n = function(VA, A, r) {
  n_va = log(A / (A - VA * r)) / log(1 + r)
  return(n_va)
}



# Función auxiliar para expandir el intervalo de búsqueda
expandir_intervalo <- function(func, lower, upper, step = 0.1, max_iter = 10) {
  for (i in 1:max_iter) {
    f.lower <- func(lower)
    f.upper <- func(upper)
    
    if (!is.na(f.lower) && !is.na(f.upper) && f.lower * f.upper <= 0) {
      return(c(lower, upper))  # Si hay cambio de signo, devuelve el intervalo
    }
    
    # Expande el intervalo
    lower <- lower - step
    upper <- upper + step
  }
  stop("No se encontró un intervalo válido para el cambio de signo.")
}


tasa_actual <- function(AV, A, n) {
  func <- function(r) {
    VA - PMT * ((1 - (1 + r)^(-n)) / r)
  }
  
  # Establecer un intervalo inicial
  lower <- 0.0001
  upper <- 1
  
  # Intentar expandir el intervalo si no hay cambio de signo
  intervalo <- expandir_intervalo(func, lower, upper)
  
  # Resolver usando uniroot con el intervalo ajustado
  r_va <- uniroot(func, intervalo)$root
  return(r_va())
}


